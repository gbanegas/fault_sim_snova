

# This file was *autogenerated* from the file main_attack.sage
from sage.all_cmdline import *   # import sage library

_sage_const_16 = Integer(16); _sage_const_8 = Integer(8); _sage_const_7 = Integer(7); _sage_const_6 = Integer(6); _sage_const_5 = Integer(5); _sage_const_4 = Integer(4); _sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_28 = Integer(28); _sage_const_17 = Integer(17); _sage_const_25 = Integer(25); _sage_const_24 = Integer(24); _sage_const_43 = Integer(43); _sage_const_49 = Integer(49); _sage_const_11 = Integer(11); _sage_const_37 = Integer(37); _sage_const_61 = Integer(61); _sage_const_33 = Integer(33); _sage_const_66 = Integer(66); _sage_const_15 = Integer(15); _sage_const_60 = Integer(60); _sage_const_10 = Integer(10); _sage_const_0 = Integer(0); _sage_const_0p7 = RealNumber('0.7')
load("utils.sage")
load("snova_faulty.sage")
load("attack.sage")


q = _sage_const_16 
F = GF(q, 'x')
FE = []
dict_for_S = {}



# Store all the elements from GF(16) in the list FE.
for i in range(_sage_const_16 ):
    FE.append(F.from_integer(i))

# Construct the matrices S2,S3,S4 (l=2,3,4)
S2 = matrix(F, [[FE[_sage_const_8 ], FE[_sage_const_7 ]], [FE[_sage_const_7 ], FE[_sage_const_6 ]]])
S3 = matrix(F, [[FE[_sage_const_8 ], FE[_sage_const_7 ], FE[_sage_const_6 ]], [FE[_sage_const_7 ], FE[_sage_const_6 ], FE[_sage_const_5 ]], [FE[_sage_const_6 ], FE[_sage_const_5 ], FE[_sage_const_4 ]]])
S4 = matrix(F, [[FE[_sage_const_8 ], FE[_sage_const_7 ], FE[_sage_const_6 ], FE[_sage_const_5 ]], [FE[_sage_const_7 ], FE[_sage_const_6 ], FE[_sage_const_5 ], FE[_sage_const_4 ]], [FE[_sage_const_6 ], FE[_sage_const_5 ], FE[_sage_const_4 ], FE[_sage_const_3 ]],
                [FE[_sage_const_5 ], FE[_sage_const_4 ], FE[_sage_const_3 ], FE[_sage_const_2 ]]])
# Define a dictionary to easy access to S2,S3, or S4.
dict_for_S = {_sage_const_2 : S2, _sage_const_3 : S3, _sage_const_4 : S4}
SL = [(_sage_const_28 , _sage_const_17 , F, _sage_const_2 ), (_sage_const_25 , _sage_const_8 , F, _sage_const_3 ), (_sage_const_24 , _sage_const_5 , F, _sage_const_4 ), (_sage_const_43 , _sage_const_25 , F, _sage_const_2 ), (_sage_const_49 , _sage_const_11 , F, _sage_const_3 ), (_sage_const_37 , _sage_const_8 , F, _sage_const_4 ), (_sage_const_61 , _sage_const_33 , F, _sage_const_2 ),
      (_sage_const_66 , _sage_const_15 , F, _sage_const_3 ), (_sage_const_60 , _sage_const_10 , F, _sage_const_4 )]
snova_parameters = SL[_sage_const_0 ]

print(snova_parameters)
prob = _sage_const_0p7 
test_F16(snova_parameters, prob)

#Sprivate = generate_seed(32)
#Spublic = generate_seed(32)
#digest = generate_seed(32)
#salt = generate_seed(32)
#(Spublic, P22) = generate_public_key(snova_parameters, Spublic, Sprivate)
#(sig, salt) = sign_fault_F16(snova_parameters, Spublic, Sprivate, digest, salt)
#acc = signature_verification(snova_parameters, (Spublic, P22), digest, (sig, salt))
#print("Passed?", acc == True)

